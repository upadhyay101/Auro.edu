{
    "questions": [
        {
            "id": 1,
            "question": "Tell me about yourself",
            "expected_keywords": ["experience", "background", "skills", "education", "career"],
            "sample_answer": "I am a software engineer with 3 years of experience in web development. I have a strong background in Python and JavaScript, and I'm particularly interested in machine learning applications. I graduated with a degree in Computer Science and have worked on several projects involving AI and data analysis."
        },
        {
            "id": 2,
            "question": "What are your strengths?",
            "expected_keywords": ["technical", "soft skills", "problem-solving", "teamwork", "communication"],
            "sample_answer": "My key strengths include strong problem-solving abilities, excellent communication skills, and the ability to work well in teams. Technically, I'm proficient in multiple programming languages and have a good understanding of software architecture. I'm also a quick learner and adapt well to new technologies."
        },
        {
            "id": 3,
            "question": "Where do you see yourself in 5 years?",
            "expected_keywords": ["career growth", "goals", "development", "leadership", "expertise"],
            "sample_answer": "In five years, I see myself in a senior technical role, leading projects and mentoring junior developers. I aim to deepen my expertise in AI and machine learning while developing strong leadership skills. I'm also interested in contributing to open-source projects and staying at the forefront of technological advancements."
        }
    ],
    "software": {
        "SOLID principles": "The SOLID principles are fundamental design principles for object-oriented programming...",
        "REST vs GraphQL": "REST and GraphQL are different approaches to building APIs...",
        "Concurrency": "Concurrency can be handled through various mechanisms like threading, async/await...",
        "Microservices": "Microservices architecture is an approach where applications are built as small independent services...",
        "Design patterns": "Common design patterns include Singleton, Factory, Observer..."
    },
    "data": {
        "Supervised vs Unsupervised": "Supervised learning uses labeled data while unsupervised learning works with unlabeled data...",
        "Missing data": "Missing data can be handled through imputation, deletion, or prediction...",
        "Data visualization": "Common tools include Matplotlib, Seaborn, Plotly...",
        "Machine learning algorithms": "Common algorithms include Linear Regression, Random Forests, Neural Networks...",
        "Model evaluation": "Models can be evaluated using metrics like accuracy, precision, recall..."
    },
    "ai": {
        "Transfer learning": "Transfer learning involves using pre-trained models and fine-tuning them...",
        "Ethics in AI": "Ethical considerations include bias, fairness, transparency...",
        "Neural networks": "Neural networks are composed of layers of neurons that process information...",
        "Bias handling": "Bias can be addressed through data preprocessing, model architecture...",
        "AI frameworks": "Popular frameworks include TensorFlow, PyTorch, Keras..."
    },
    "web": {
        "Client vs Server rendering": "Client-side rendering happens in the browser while server-side rendering...",
        "Website optimization": "Optimization techniques include caching, minification, lazy loading...",
        "Responsive design": "Responsive design ensures websites work well on all screen sizes...",
        "Security practices": "Security best practices include HTTPS, input validation, XSS prevention...",
        "Cross-browser compatibility": "Cross-browser issues can be handled through feature detection..."
    },
    "mobile": {
        "Native vs Hybrid": "Native apps are built specifically for one platform while hybrid apps...",
        "Offline functionality": "Offline functionality can be implemented using service workers...",
        "Mobile UI/UX": "Mobile UI/UX focuses on touch interactions, screen size constraints...",
        "Mobile frameworks": "Popular frameworks include React Native, Flutter, Ionic...",
        "Performance optimization": "Mobile performance can be optimized through code splitting..."
    },
    "interviews": [],
    "last_updated": null
} 